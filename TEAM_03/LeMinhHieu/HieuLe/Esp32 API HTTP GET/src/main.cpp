#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>

// Th√¥ng tin WiFi
const char* ssid = "Wokwi-GUEST";  // ƒê·ªïi theo WiFi c·ªßa b·∫°n
const char* pass = "";             // M·∫≠t kh·∫©u WiFi n·∫øu c√≥

// API l·∫•y th√¥ng tin v·ªã tr√≠ d·ª±a tr√™n ƒë·ªãa ch·ªâ IP
const char* apiURL = "http://ip-api.com/json";

void fetchLocationData() {
  HTTPClient http;
  http.begin(apiURL);

  int httpCode = http.GET();
  if (httpCode <= 0) {  // Ki·ªÉm tra l·ªói HTTP
      Serial.printf("‚ùå L·ªói k·∫øt n·ªëi HTTP: %d\n", httpCode);
      http.end();
      return;
  }

  if (httpCode != HTTP_CODE_OK) {  // Ki·ªÉm tra HTTP Code ph·∫£i l√† 200
      Serial.printf("‚ùå L·ªói HTTP %d: Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu!\n", httpCode);
      http.end();
      return;
  }

  String payload = http.getString();
  Serial.println("\nüì• D·ªØ li·ªáu JSON nh·∫≠n ƒë∆∞·ª£c:");
  Serial.println(payload);
  
  // Ph√¢n t√≠ch d·ªØ li·ªáu JSON
  DynamicJsonDocument doc(2048);  // TƒÉng k√≠ch th∆∞·ªõc b·ªô nh·ªõ JSON
  DeserializationError error = deserializeJson(doc, payload);

  if (error) {
      Serial.print("‚ùå L·ªói ph√¢n t√≠ch JSON: ");
      Serial.println(error.c_str());
      http.end();
      return;
  }

  // L·∫•y d·ªØ li·ªáu t·ª´ JSON (ki·ªÉm tra null tr√°nh crash)
  const char* ip = doc["query"] | "Unknown";
  const char* countryCode = doc["countryCode"] | "Unknown";
  const char* country = doc["country"] | "Unknown";
  const char* regionName = doc["regionName"] | "Unknown";
  const char* city = doc["city"] | "Unknown";
  float lon = doc["lon"] | 0.0;
  float lat = doc["lat"] | 0.0;

  // T·∫°o chu·ªói k·∫øt qu·∫£
  String result = String(ip) + "|" + 
                  String(countryCode) + "|" + 
                  String(country) + "|" + 
                  String(regionName) + "|" + 
                  String(city) + "|" + 
                  String(lon, 6) + "|" + 
                  String(lat, 6);

  Serial.println("\nüîπ Chu·ªói k·∫øt qu·∫£:");
  Serial.println(result);

  // T·∫°o link Google Maps
  String googleMapsLink = "https://www.google.com/maps?q=" + String(lat) + "," + String(lon);
  Serial.println("\nüîó Link Google Maps:");
  Serial.println(googleMapsLink);

  http.end();
}


void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, pass);

    Serial.print("ƒêang k·∫øt n·ªëi WiFi...");
    int attempt = 0;
    while (WiFi.status() != WL_CONNECTED && attempt < 20) {  // Gi·ªõi h·∫°n 10 gi√¢y ch·ªù WiFi
        delay(500);
        Serial.print(".");
        attempt++;
    }

    if (WiFi.status() == WL_CONNECTED) {
        Serial.println("\n‚úÖ K·∫øt n·ªëi WiFi th√†nh c√¥ng!");
        fetchLocationData();  // G·ªçi h√†m l·∫•y d·ªØ li·ªáu t·ª´ API
    } else {
        Serial.println("\n‚ùå L·ªói: Kh√¥ng th·ªÉ k·∫øt n·ªëi WiFi!");
    }
}



void loop() {
    // Kh√¥ng l√†m g√¨ c·∫£
}
